export class I18n {
  constructor() {
    this.locale = 'zh';
    this.translations = {
      zh: {
        title: '批量打开URL',
        urlInputLabel: '输入URL（每行一个）',
        urlInputPlaceholder: '在此输入URL，每行一个...',
        delayLoad: '延迟加载',
        preserveInput: '保留输入',
        removeDuplicates: '去除重复',
        searchNonUrls: '搜索非URL文本',
        validateUrls: '验证URL',
        autoProtocol: '自动添加协议',
        openOrder: '打开顺序',
        openOrderNormal: '正常顺序',
        openOrderReverse: '反向顺序',
        openOrderRandom: '随机顺序',
        openOrderDomain: '按域名排序',
        openOrderTime: '按时间排序',
        groupOption: '标签页分组',
        groupOptionNone: '不分组',
        groupOptionNew: '新建分组',
        groupOptionExisting: '添加到现有分组',
        urlCategory: 'URL分类',
        urlCategoryNone: '不分类',
        urlCategoryDomain: '按域名分类',
        urlCategoryCustom: '自定义分类',
        maxUrls: '最大URL数量',
        openUrls: '打开URL',
        extractUrls: '提取URL',
        import: '导入',
        export: '导出',
        close: '关闭',
        confirmOpen: '确认打开',
        urlPreview: 'URL预览',
        processing: '处理中...',
        success: '成功处理 {count} 个URL',
        error: '错误：{message}',
        noValidUrls: '没有找到有效的URL',
        noUrlsToExport: '没有可导出的URL',
        importSuccess: '成功导入URL',
        importError: '导入失败',
        exportSuccess: '成功导出URL',
        exportError: '导出失败：{message}',
        selectAtLeastOne: '请至少选择一个URL',
        urlCount: 'URL总数：{count}',
        validUrlCount: '有效URL数：{count}',
        themeLight: '浅色主题',
        themeDark: '深色主题',
        language: '语言',
        languageZh: '中文',
        languageEn: 'English',
        settings: '设置',
        about: '关于',
        version: '版本',
        description: '一个用于批量打开URL的Chrome扩展',
        features: '功能特点',
        feature1: '支持批量打开多个URL，可自定义打开顺序',
        feature2: '支持URL预览和选择性打开，提供更好的控制',
        feature3: '支持标签页分组管理，自动整理标签页',
        feature4: '支持URL提取和验证，确保链接有效性',
        feature5: '支持URL导入导出，方便数据迁移',
        feature6: '支持进度显示和状态反馈，操作更直观',
        feature7: '支持URL安全检查，提供安全警告',
        feature8: '支持中英文界面切换，适应不同用户',
        feature9: '支持深色模式和系统主题同步，护眼美观',
        feature10: '支持自定义设置和偏好保存，个性化体验',
        feature11: '支持URL安全性检查',
        feature12: '支持URL元数据缓存',
        feature13: '支持自定义设置保存',
        feature14: '支持URL计数统计',
        settingsSaved: '设置已保存',
        maxUrlsLimitReached: 'URL数量超过限制，已截取前 {count} 个',
        generalSettings: '常规设置',
        appearanceSettings: '外观设置',
        urlSettings: 'URL设置',
        advancedSettings: '高级设置',
        theme: '主题',
        themeSystem: '跟随系统',
        showUrlCount: '显示URL计数',
        showProgressBar: '显示进度条',
        defaultMaxUrls: '默认最大URL数量',
        defaultValidateUrls: '默认验证URL',
        defaultAutoProtocol: '默认自动添加协议',
        cacheExpiration: '缓存过期时间（小时）',
        enableDebugMode: '启用调试模式',
        game2024: '2024 游戏',
        score: '得分',
        newGame: '新游戏',
        gameInstructions: '使用方向键或滑动来移动方块。合并相同数字以达到2024！',
        gameOver: '游戏结束！最终得分：',
        // 标签页相关
        urlTab: 'URL管理',
        contentTab: '内容替换',
        notepadTab: '记事本',
        calculatorTab: '计算器',
        musicTab: '音乐',
        youtubeTab: '视频',

        // 内容替换相关
        contentReplaceLabel: '内容替换',
        originalContent: '原内容',
        originalContentPlaceholder: '输入要替换的原内容...',
        findText: '查找内容',
        findTextPlaceholder: '输入要查找的文本...',
        replaceWith: '替换为',
        replaceWithPlaceholder: '输入替换后的文本...',
        replace: '替换',
        replaceAll: '全部替换',
        copyContent: '复制',
        clear: '清空',
        originalContentRequired: '请输入原内容',
        findTextRequired: '请输入要查找的内容',
        replaceSuccess: '内容替换成功',
        replaceError: '替换失败：{message}',
        copySuccess: '复制成功',
        copyError: '复制失败：{message}',
        noContentToCopy: '没有内容可复制',
        clearSuccess: '已清空所有内容',
        // YouTube相关
        youtubeSearch: '搜索',
        youtubeSearchPlaceholder: '搜索YouTube视频...',
        youtubeSearchTip: '提示：需要先在设置中配置YouTube API密钥',
        loadMore: '加载更多',
        noResults: '没有找到相关视频',
        searchError: '搜索失败：{message}',
        apiKeyRequired: '请先在设置中配置YouTube API密钥',
        videoDuration: '时长：{duration}',
        videoViews: '观看次数：{views}',
        videoPublished: '发布时间：{date}',
        openVideo: '打开视频',
        youtubeSettings: 'YouTube设置',
        youtubeApiKey: 'YouTube API密钥',
        youtubeApiKeyHelp: '获取API密钥：Google Cloud Console',
        youtubeApiKeyNote: '已提供默认API密钥，您也可以使用自己的密钥',
        saveApiKey: '保存',
        // 记事本相关
        newNote: '新建',
        editNote: '编辑',
        saveNote: '保存',
        deleteNote: '删除',
        noteList: '记事列表',
        noteTitle: '标题',
        noteTitlePlaceholder: '输入记事标题...',
        noteContent: '内容',
        noteContentPlaceholder: '输入记事内容...',
        searchNotesPlaceholder: '搜索记事...',
        editNoteTitle: '编辑记事',
        createdDate: '创建时间：{date}',
        modifiedDate: '修改时间：{date}',
        noteEmptyError: '标题和内容不能同时为空',
        noteSavedSuccess: '记事保存成功',
        noteDeletedSuccess: '记事删除成功',
        noNoteSelected: '请先选择要编辑的记事',
        confirmDeleteNote: '确定要删除这个记事吗？',
        // 计算器相关
        calculatorHistory: '计算历史',
        clearHistory: '清空历史',
        calculatorDisplay: '计算器显示',
        // 音乐相关
        musicPlayer: '网易云音乐',
        randomPlay: '随机播放',
        stopMusic: '停止',
        openMusic: '打开',
        playHistory: '播放历史',
        popularPlaylists: '热门歌单',
        // 状态消息
        status: '状态',
        processing: '处理中...',
        completed: '完成',
        failed: '失败',
        cancelled: '已取消',
        // 提示信息
        tip: '提示',
        warning: '警告',
        error: '错误',
        success: '成功',
        info: '信息',
        // 操作确认
        confirm: '确认',
        cancel: '取消',
        ok: '确定',
        yes: '是',
        no: '否',
        // 通用操作
        save: '保存',
        load: '加载',
        reset: '重置',
        refresh: '刷新',
        close: '关闭',
        open: '打开',
        edit: '编辑',
        delete: '删除',
        add: '添加',
        remove: '移除',
        select: '选择',
        search: '搜索',
        filter: '过滤',
        sort: '排序',
        // 时间相关
        today: '今天',
        yesterday: '昨天',
        tomorrow: '明天',
        // 数量相关
        total: '总计',
        count: '数量',
        amount: '金额',
        percentage: '百分比',
        // 文件相关
        file: '文件',
        folder: '文件夹',
        upload: '上传',
        download: '下载',
        // 网络相关
        network: '网络',
        connection: '连接',
        online: '在线',
        offline: '离线',
        // 设置相关
        settings: '设置',
        preferences: '偏好设置',
        configuration: '配置',
        options: '选项',
        advanced: '高级',
        basic: '基础',
        // 帮助相关
        help: '帮助',
        about: '关于',
        version: '版本',
        update: '更新',
        changelog: '更新日志',
        feedback: '反馈',
        support: '支持'
      },
      en: {
        title: 'Open Multiple URLs',
        urlInputLabel: 'Enter URLs (one per line)',
        urlInputPlaceholder: 'Enter URLs here, one per line...',
        delayLoad: 'Delay Loading',
        preserveInput: 'Preserve Input',
        removeDuplicates: 'Remove Duplicates',
        searchNonUrls: 'Search Non-URL Text',
        validateUrls: 'Validate URLs',
        autoProtocol: 'Auto Add Protocol',
        openOrder: 'Open Order',
        openOrderNormal: 'Normal Order',
        openOrderReverse: 'Reverse Order',
        openOrderRandom: 'Random Order',
        openOrderDomain: 'Sort by Domain',
        openOrderTime: 'Sort by Time',
        groupOption: 'Tab Grouping',
        groupOptionNone: 'No Grouping',
        groupOptionNew: 'New Group',
        groupOptionExisting: 'Add to Existing Group',
        urlCategory: 'URL Categorization',
        urlCategoryNone: 'No Categorization',
        urlCategoryDomain: 'By Domain',
        urlCategoryCustom: 'Custom',
        maxUrls: 'Max URLs',
        openUrls: 'Open URLs',
        extractUrls: 'Extract URLs',
        import: 'Import',
        export: 'Export',
        close: 'Close',
        confirmOpen: 'Confirm Open',
        urlPreview: 'URL Preview',
        processing: 'Processing...',
        success: 'Successfully processed {count} URLs',
        error: 'Error: {message}',
        noValidUrls: 'No valid URLs found',
        noUrlsToExport: 'No URLs to export',
        importSuccess: 'Successfully imported URLs',
        importError: 'Import failed',
        exportSuccess: 'Successfully exported URLs',
        exportError: 'Export failed: {message}',
        selectAtLeastOne: 'Please select at least one URL',
        urlCount: 'Total URLs: {count}',
        validUrlCount: 'Valid URLs: {count}',
        themeLight: 'Light Theme',
        themeDark: 'Dark Theme',
        language: 'Language',
        languageZh: '中文',
        languageEn: 'English',
        settings: 'Settings',
        about: 'About',
        version: 'Version',
        description: 'A Chrome extension for opening multiple URLs',
        features: 'Features',
        feature1: 'Support batch opening URLs with customizable order',
        feature2: 'URL preview and selective opening for better control',
        feature3: 'Tab group management for automatic organization',
        feature4: 'URL extraction and validation for link integrity',
        feature5: 'URL import/export for easy data migration',
        feature6: 'Progress display and status feedback for better visibility',
        feature7: 'URL security check with safety warnings',
        feature8: 'Chinese/English interface for different users',
        feature9: 'Dark mode and system theme sync for eye comfort',
        feature10: 'Custom settings and preferences for personalization',
        feature11: 'URL security checking',
        feature12: 'URL metadata caching',
        feature13: 'Custom settings saving',
        feature14: 'URL counting statistics',
        settingsSaved: 'Settings saved',
        generalSettings: 'General Settings',
        appearanceSettings: 'Appearance Settings',
        urlSettings: 'URL Settings',
        advancedSettings: 'Advanced Settings',
        theme: 'Theme',
        themeSystem: 'System',
        showUrlCount: 'Show URL Count',
        showProgressBar: 'Show Progress Bar',
        defaultMaxUrls: 'Default Max URLs',
        defaultValidateUrls: 'Default Validate URLs',
        defaultAutoProtocol: 'Default Auto Protocol',
        cacheExpiration: 'Cache Expiration (Hours)',
        enableDebugMode: 'Enable Debug Mode',
        game2024: '2024 Game',
        score: 'Score',
        newGame: 'New Game',
        gameInstructions: 'Use arrow keys or swipe to move tiles. Combine matching numbers to reach 2024!',
        gameOver: 'Game Over! Final Score: ',
        // Tab related
        urlTab: 'URL Management',
        contentTab: 'Content Replacement',
        notepadTab: 'Notepad',
        calculatorTab: 'Calculator',
        musicTab: 'Music',
        youtubeTab: 'Videos',
        // Content replacement related
        contentReplaceLabel: 'Content Replacement',
        originalContent: 'Original Content',
        originalContentPlaceholder: 'Enter original content to replace...',
        findText: 'Find Text',
        findTextPlaceholder: 'Enter text to find...',
        replaceWith: 'Replace With',
        replaceWithPlaceholder: 'Enter replacement text...',
        replace: 'Replace',
        replaceAll: 'Replace All',
        copyContent: 'Copy',
        clear: 'Clear',
        originalContentRequired: 'Please enter original content',
        findTextRequired: 'Please enter text to find',
        replaceSuccess: 'Content replaced successfully',
        replaceError: 'Replace failed: {message}',
        copySuccess: 'Copied successfully',
        copyError: 'Copy failed: {message}',
        noContentToCopy: 'No content to copy',
        clearSuccess: 'All content cleared',
        // YouTube related
        youtubeSearch: 'Search',
        youtubeSearchPlaceholder: 'Search YouTube videos...',
        youtubeSearchTip: 'Note: YouTube API key needs to be configured in settings first',
        loadMore: 'Load More',
        noResults: 'No videos found',
        searchError: 'Search failed: {message}',
        apiKeyRequired: 'Please configure YouTube API key in settings first',
        videoDuration: 'Duration: {duration}',
        videoViews: 'Views: {views}',
        videoPublished: 'Published: {date}',
        openVideo: 'Open Video',
        youtubeSettings: 'YouTube Settings',
        youtubeApiKey: 'YouTube API Key',
        youtubeApiKeyHelp: 'Get API Key: Google Cloud Console',
        youtubeApiKeyNote: 'Default API key provided, you can also use your own key',
        saveApiKey: 'Save',
        // Notepad related
        newNote: 'New',
        editNote: 'Edit',
        saveNote: 'Save',
        deleteNote: 'Delete',
        noteList: 'Note List',
        noteTitle: 'Title',
        noteTitlePlaceholder: 'Enter note title...',
        noteContent: 'Content',
        noteContentPlaceholder: 'Enter note content...',
        searchNotesPlaceholder: 'Search notes...',
        editNoteTitle: 'Edit Note',
        createdDate: 'Created: {date}',
        modifiedDate: 'Modified: {date}',
        noteEmptyError: 'Title and content cannot be empty',
        noteSavedSuccess: 'Note saved successfully',
        noteDeletedSuccess: 'Note deleted successfully',
        noNoteSelected: 'Please select a note to edit',
        confirmDeleteNote: 'Are you sure you want to delete this note?',
        // Calculator related
        calculatorHistory: 'Calculation History',
        clearHistory: 'Clear History',
        calculatorDisplay: 'Calculator Display',
        // Music related
        musicPlayer: 'NetEase Cloud Music',
        randomPlay: 'Random Play',
        stopMusic: 'Stop',
        openMusic: 'Open',
        playHistory: 'Play History',
        popularPlaylists: 'Popular Playlists',
        // Status messages
        status: 'Status',
        processing: 'Processing...',
        completed: 'Completed',
        failed: 'Failed',
        cancelled: 'Cancelled',
        // Notifications
        tip: 'Tip',
        warning: 'Warning',
        error: 'Error',
        success: 'Success',
        info: 'Info',
        // Confirmations
        confirm: 'Confirm',
        cancel: 'Cancel',
        ok: 'OK',
        yes: 'Yes',
        no: 'No',
        // Common actions
        save: 'Save',
        load: 'Load',
        reset: 'Reset',
        refresh: 'Refresh',
        close: 'Close',
        open: 'Open',
        edit: 'Edit',
        delete: 'Delete',
        add: 'Add',
        remove: 'Remove',
        select: 'Select',
        search: 'Search',
        filter: 'Filter',
        sort: 'Sort',
        // Time related
        today: 'Today',
        yesterday: 'Yesterday',
        tomorrow: 'Tomorrow',
        // Quantity related
        total: 'Total',
        count: 'Count',
        amount: 'Amount',
        percentage: 'Percentage',
        // File related
        file: 'File',
        folder: 'Folder',
        upload: 'Upload',
        download: 'Download',
        // Network related
        network: 'Network',
        connection: 'Connection',
        online: 'Online',
        offline: 'Offline',
        // Settings related
        settings: 'Settings',
        preferences: 'Preferences',
        configuration: 'Configuration',
        options: 'Options',
        advanced: 'Advanced',
        basic: 'Basic',
        // Help related
        help: 'Help',
        about: 'About',
        version: 'Version',
        update: 'Update',
        changelog: 'Changelog',
        feedback: 'Feedback',
        support: 'Support'
      }
    };
  }

  setLocale(locale) {
    if (this.translations[locale]) {
      this.locale = locale;
      return true;
    }
    return false;
  }

  getLocale() {
    return this.locale;
  }

  t(key, params = {}) {
    const translation = this.translations[this.locale][key];
    if (!translation) {
      console.warn(`Translation missing for key: ${key}`);
      return key;
    }

    return translation.replace(/\{(\w+)\}/g, (match, key) => {
      return params[key] !== undefined ? params[key] : match;
    });
  }

  async saveLocale() {
    try {
      await chrome.storage.local.set({ locale: this.locale });
    } catch (error) {
      console.error('Failed to save locale:', error);
    }
  }

  async loadLocale() {
    try {
      const result = await chrome.storage.local.get('locale');
      if (result.locale && this.translations[result.locale]) {
        this.locale = result.locale;
      }
    } catch (error) {
      console.error('Failed to load locale:', error);
    }
  }
}

export function initializeI18n() {
  const i18n = new I18n();
  i18n.loadLocale();
  return i18n;
}